# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLO11 object detection model with P3/8 - P5/32 outputs
# Model docs: https://docs.ultralytics.com/models/yolo11
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
# YOLOv11-L config
nc: 1  # <-- update to your number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 181 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 181 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 231 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 357 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 357 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

depth_multiple: 1.0   # from scale 'l'
width_multiple: 1.0   # from scale 'l'
max_channels: 512     # from scale 'l'

# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] #           0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] #          1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]] #   2
  - [-1, 1, Conv, [256, 3, 2]] #          3-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]] #   4
  - [-1, 1, Conv, [512, 3, 2]] #          5-P4/16
  - [-1, 2, C3k2, [512, True]] #          6
  - [-1, 1, Conv, [1024, 3, 2]] #         7-P5/32
  - [-1, 2, C3k2, [1024, True]] #         8
  - [-1, 1, CBAM, [512]]      #           9
  - [-1, 1, SPPF, [1024, 5]] #            10
  - [-1, 2, C2PSA, [1024]] #              11

# YOLO11n head
head:
  # MF1
  -  [-1, 1, Conv, [512, 1, 1]]                   # 11     SCS path   (20,20,512)
  -  [-1, 1, nn.Upsample, [None, 2, "nearest"]]   # 12     SCS path   (40,40,512)
  -  [4, 1, Conv, [512, 1, 1]]                    # 13     F2  path   (80,80,512)
  -  [-1, 1, Conv, [512, 3, 2]]                   # 14     F2  path   downsample (40,40,512)
  -  [[-1, 6, 13], 1, Add, []]                    # 15     F3  path   (40,40,512)     N3
  -  [-1, 1, Conv, [512, 1, 1]]                   # 16     N3 path  (40,40,512)

  # MF2
  -  [-1, 1, Conv, [512, 1, 1]]                   # 17     N3 path   (40,40,256)
  -  [-1, 1, nn.Upsample, [None, 2, "nearest"]]   # 18     N3 path   (80,80,256)
  -  [2, 1, Conv, [512, 1, 1]]                    # 19     F1  path   (160,160,256)
  -  [-1, 1, Conv, [512, 3, 2]]                   # 20     F1  path   downsample (80,80,256)
  -  [[-1, 4, 19], 1, Add, []]                    # 21     F2  path   (80,80,256)     
  -  [-1, 1, Conv, [256, 1, 1]]                   # 22     N2 path     (80,80,256)
  # TA
  -  [-1, 1, TA, [256]]                           # 23     N2 path     (80,80,256)   P2

  # MF3
  -  [-1, 1, Conv, [256, 1, 1]]                   # 24     P2  path   (80,80,256)
  -  [-1, 1, Conv, [256, 3, 2]]                   # 25     P2  path   downsample (40,40,256)
  -  [17, 1, Conv, [256, 1, 1]]                   # 26     N3  path   (40,40,256)
  -  [[-1, 26], 1, Add, []]                       # 27     N3  path   (40,40,256)     N3
  -  [-1, 1, Conv, [512, 1, 1]]                   # 28     N3 path  (40,40,512)
  # TA
  -  [-1, 1, TA, [512]]                           # 29     N3 path     (40,40,512)   P3

  # MF4
  -  [-1, 1, Conv, [512, 1, 1]]                   # 30     P3  path   (40,40,512)
  -  [-1, 1, Conv, [512, 3, 2]]                   # 31     P3  path   downsample (20,20,512)
  -  [9, 1, Conv, [512, 1, 1]]                    # 32     N3  path   (20,20,512)
  -  [[-1, 32], 1, Add, []]                       # 33     N3  path   (20,20,512)     
  -  [-1, 1, Conv, [1024, 1, 1]]                  # 34     N3 path  (20,20,1024)
  # TA
  -  [-1, 1, TA, [512]]                          # 35     N3 path     (20,20,1024)   P4


  - [[24, 30, 36], 1, Detect, [nc]] # Detect(P3, P4, P5)
